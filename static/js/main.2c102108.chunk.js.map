{"version":3,"sources":["components/page-app/Header.js","components/page-app/Section.js","container/home/Home.js","container/project/Project.js","components/dogfriends-app/Dog.js","components/dogfriends-app/DogList.js","components/dogfriends-app/DropDown.js","container/project/DogFriend.js","Page.js","serviceWorker.js","index.js"],"names":["Header","className","class","to","Section","Home","AppList","name","image","color","route","Project","apps","appComponent","map","appLists","i","style","textDecoration","src","ProjectApp","Dog","dogs","alt","DogList","listBreeds","message","dog","key","DropDown","dropDownBox","id","onChange","value","DogFriend","handleDropDown","event","setState","dogTypes","target","getApi","url","fetch","then","response","json","data","state","this","length","React","Component","Page","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.2c102108.chunk.js","sourcesContent":["import React from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Link } from 'react-router-dom';\nimport './page.css';\n\n\nconst Header = () => {\n    return (\n        <div className=\"container\">\n          <h1> Technology Lover</h1>\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <Link to=\"/\">Home</Link>\n            </div>\n            <div class=\"col-sm\">\n              <Link to=\"/projects\">Project</Link>\n            </div>\n            <div class=\"col-sm\">\n              <Link to=\"about\">About</Link>\n            </div>\n          </div>\n        </div>\n      \n    );\n}\n\nexport default Header;","import React from 'react';\n\n\n\nconst Section = () =>{\n    return (\n      <section class=\"vh-100 dt w-100 bg-black grow br3 bw2 mv4\">\n        <div class=\"dtc v-mid tc white ph3 ph4-l\">\n          <h1 class=\"f6 f2-m f-subheadline-l fw6 tc\">Hello Hire ME !</h1>\n          <p className=\"f-subheadline-l f2-m fw6\">\n            Check Out My Projects in React:\n          </p>\n          <p className=\"f-subheadline-l f2-m fw6\">\n            Contact: Darayuthhang12@gmail.com\n          </p>\n        </div>\n      </section>\n    );\n}\n\nexport default Section;","\n\nimport React from 'react';\nimport Header from '../../components/page-app/Header';\nimport Section from '../../components/page-app/Section';\n\n//bg-light-${appLists.color} dib br3 pa3 ma2 grow bw2 shadow-5\nconst Home = () => {\n    return (\n      <div className=\"tc\">\n        <Header />\n        <Section />\n      </div>\n    );\n}\n\n\nexport default Home;","\n\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport './project.css';\n\n\nconst AppList = [\n  {\n    name: \"DogFriend\",\n    image:\n      \"https://images.unsplash.com/photo-1563889362352-b0492c224f62?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=934&q=80\",\n    color: \"green\",\n    route: \"dogfriends\",\n  },\n  {\n    name: \"CountDownTimer\",\n    image:\n      \"https://images.unsplash.com/photo-1575203091586-611fe505bb0e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\",\n    color: \"blue\",\n    route: \"countdowntimer\",\n  },\n];\n\nconst ProjectApp = (apps) => {\n  let green = \"green\";\n  const appComponent = apps.map((appLists, i) => {\n      return (\n        <div className={`bg-light-${appLists.color} dib br3 pa3 ma2 grow bw2 shadow-5`}>\n          <Link to={`/projects/${appLists.route}`} style={{ textDecoration: \"none\" }}>\n            <h1 className=\"dog\">{appLists.name} </h1>\n            <img className=\"img br3 bw2\" src={appLists.image} />\n          </Link>\n        </div>\n      );\n    \n  });\n  return <div>{appComponent}</div>;\n};\n\nconst Project = () => {\n    return (\n      <div className=\"vh-100 dt w-100\">\n        <div className=\"dtc v-mid tc white ph3 ph4-l\">\n   \n              {ProjectApp(AppList)}\n        </div>\n      </div>\n    );\n}\n\n\n\n\nexport default Project;","import React from 'react';\nimport \"./style.css\";\n\n\n\nconst Dog = ({ dogs }) =>{\n    return (\n      <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n        <img className=\"w5 h5\" alt=\"huskies\" src={dogs} />\n      </div>\n    );\n}\n\nexport default Dog;\n\n\n","import React from 'react';\n\nimport Dog from './Dog.js';\n\nconst DogList = ({dogs}) =>{\n      const listBreeds = dogs.message.map((dog, i) => {\n            return <Dog key={i} dogs={dogs.message[i]} />\n      })\n      return (\n            <div className=\"\">\n            {listBreeds}\n       </div>\n      );\n    \n}\n \nexport default DogList;","import React from 'react';\n\n\nconst DropDown = ({ dropDownBox}) => {\n    return(\n        <div className= \"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n            <select name=\"cars\" id=\"cars\" onChange={dropDownBox}>\n                <option value=\"husky\" >Husky</option>\n                <option value=\"keeshond\">keeshond</option>\n                <option value=\"kelpie\">kelpie</option>\n                <option value=\"komondor\">komondor</option>\n            </select>\n        </div>\n    );\n}\n \nexport default DropDown;","import React from 'react';\n\n\nimport DogList from '../../components/dogfriends-app/DogList.js';\nimport DropDown from '../../components/dogfriends-app/DropDown.js';\n\nclass DogFriend extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      \"dogTypes\": \"\",\n      \"dogs\": []\n    }\n  }\n\n  handleDropDown = (event) => {\n    this.setState({\n      dogTypes:event.target.value,\n    })\n  }\n\n\n  componentDidMount(){\n    let url;\n    url = \"https://dog.ceo/api/breed/husky/images\"\n    this.getApi(url);\n  }\n\n  getApi = (url) => {\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => { this.setState({ dogs: data }) });\n  }\n\n\n\n  render() {\n    if(this.state.dogTypes !== \"\"){\n      let { dogTypes } = this.state;\n      const url = `https://dog.ceo/api/breed/${dogTypes}/images`;\n      this.getApi(url);\n    }\n  \n\n    if(this.state.dogs.length === 0){\n      return <h1>Loading</h1>\n    }else{\n      return (\n        <div className=\"tc\">\n          <div className=\"dogfriend-bg\">\n            <DropDown dropDownBox={this.handleDropDown} />\n            <DogList dogs={this.state.dogs} />\n          </div>\n        </div>\n      );\n    }\n  }\n}\n \n\nexport default DogFriend;\n","\nimport React from \"react\";\nimport { Route } from \"react-router\";\nimport Home from \"./container/home/Home\";\nimport Project from \"./container/project/Project\";\nimport DogFriend from \"./container/project/DogFriend\";\n\n//Hold all the template\n/*****\n\nroute : /  ===> home\nroute : project/anyapps\n\n******/\n\nconst Page = () => {\n    return (\n      <div>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/projects\" component={Project} />\n        <Route exact path=\"/projects/dogfriends\" component={DogFriend} />\n        <Route exact path=\"/projects/countdowntimer\" />\n      </div>\n    );\n}\n\nexport default Page;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Page from './Page';\n\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter} from \"react-router-dom\";\nimport 'tachyons';\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Page />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}